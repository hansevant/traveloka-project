// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  @@map("users")
  id          String @id @default(cuid())
  firebaseId  String? @unique
  name        String
  city        String
  state       String
  reviews     Review[]
}

model Hotel {
  @@map("hotels")
  id          String @id @default(cuid())
  name        String
  address     String @db.Text
  city        String
  state       String
  country     String
  latitude    Float
  longitude   Float
  type        String
  image       String? @db.Text
  price       Int? @default(0)
  stars       Int? @default(0)
  description String @db.Text
  reviews               Review[]
  hotelFacilities      HotelFacility[]
  pointOfInterests    PointOfInterest[]
  roomFacilities       RoomFacility[]
}

model PointOfInterest {
  @@map("point_of_interests")
  id          Int @id @default(autoincrement()) 
  hotel       Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId    String
  interest    String
}

model RoomFacility {
  @@map("room_facilities")
  id          Int @id @default(autoincrement())
  hotel       Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId    String
  facility    String
}

model HotelFacility {
  @@map("hotel_facilities")
  id          Int @id @default(autoincrement())
  hotel       Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId    String
  facility    String
}

model Review {
  @@map("reviews")
  id           String @id @default(cuid())
  user         User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  hotel        Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId     String
  rating       Int @default(1)
  comment      String? @db.Text

  @@unique([hotelId, userId])
}
